apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  namespace: fpsa
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      tier: api
  replicas: 1
  template:
    metadata:
      name: {{ .Chart.Name }}
      namespace: fpsa
      labels:
        app: {{ .Chart.Name }}
        tier: api
    spec:
      imagePullSecrets:
      - name: regcred
      volumes:
        - name: {{ .Chart.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-volume-claim
      containers:
      - name: {{ .Chart.Name }}
        image: docker.pkg.github.com/federation-purple-study-associations/fpsa-api/backend:{{.Values.tag}}
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
          - mountPath: {{.Values.storagePath}}
            name: {{ .Chart.Name }}-storage
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: db
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db
              key: DB_NAME
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt
              key: JWT_SECRET
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: cookies
              key: COOKIE_SECRET
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: mailing
              key: SMTP_USERNAME
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mailing
              key: SMTP_PASSWORD
        - name: env
          value: PRODUCTION
        - name: URL_SITE
          value: "{{.Values.frontendUrl}}"
        - name: URL_API
          value: "{{.Values.backendUrl}}"
        - name: STORAGE_PATH
          value: "{{.Values.storagePath}}"
        ports:
        - containerPort: 3000